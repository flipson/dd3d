Bootstrap: docker
From: nvidia/cuda:11.1.1-cudnn8-devel-ubuntu18.04


%environment
    export PYTHONPATH=`pwd`


%post
    # -------------------------
    # Install core APT packages.
    # -------------------------
    export DEBIAN_FRONTEND=noninteractive
    export PYTHON_VERSION=3.8

    apt-get update && apt-get install -y \
        build-essential \
          cmake \
          ffmpeg \
          g++-4.8 \
          git \
          curl \
          docker.io \
          vim \
          wget \
          unzip \
          htop \
          libjpeg-dev \
          libpng-dev \
          libavdevice-dev \
          pkg-config \
          python${PYTHON_VERSION} \
          python${PYTHON_VERSION}-dev \
          python3-tk \
          python${PYTHON_VERSION}-distutils \
          python3-opencv \
        && ln -sf /usr/bin/python${PYTHON_VERSION} /usr/bin/python \
        && ln -sf /usr/bin/python${PYTHON_VERSION} /usr/bin/python3 \
        && rm -rf /var/lib/apt/lists/*


    # --------------------------------------------------
    # 'mpirun' for launching distributed training.
    # --------------------------------------------------
    rm -rf /tmp/openmpi
    mkdir /tmp/openmpi && \
        cd /tmp/openmpi && \
        wget https://download.open-mpi.org/release/open-mpi/v4.1/openmpi-4.1.1.tar.gz && \
        tar zxf openmpi-4.1.1.tar.gz && \
        cd openmpi-4.1.1 && \
        ./configure --enable-orterun-prefix-by-default && \
        make -j $(nproc) all && \
        make install && \
        ldconfig && \
        cd /root \
        rm -rf /tmp/openmpi

    # Install OpenSSH for MPI to communicate between containers
    apt-get update && apt-get install -y --no-install-recommends openssh-client openssh-server && \
        mkdir -p /var/run/sshd
    # Allow OpenSSH to talk to containers without asking for confirmation
    cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new && \
        echo "    StrictHostKeyChecking no" >> /etc/ssh/ssh_config.new && \
        mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config

    # -------------------------
    # Install core PIP packages.
    # -------------------------

    curl 'https://bootstrap.pypa.io/get-pip.py' > get-pip.py && \
    python get-pip.py

    # Core tools.
    pip3 install \
        awscli==1.20.27 \
        boto3==1.18.27 \
        coloredlogs==15.0.1 \
        hydra-core==1.1.1 \
        matplotlib==3.4.3 \
        mpi4py==3.1.1 \
        numpy==1.20.3 \
        pandas==1.3.2 \
        requests==2.26.0 \
        scikit-image==0.18.2 \
        scipy==1.7.1 \
        seaborn==0.11.2 \
        tenacity==8.0.1 \
        tqdm==4.62.2 \
        wandb==0.12.0

    pip3 install numba==0.54.0 Cython==0.29.24 pycocotools==2.0.2 nuscenes-devkit==1.1.7

    # Install pytorch 1.9+cu111
    pip3 install torch==1.9.0+cu111 torchvision==0.10.0+cu111 -f https://download.pytorch.org/whl/torch_stable.html

    # Install fvcore and detectron2.
    export FVCORE_CACHE="/tmp"
    pip3 install -U 'git+https://github.com/facebookresearch/fvcore'
    python3 -m pip install detectron2 -f https://dl.fbaipublicfiles.com/detectron2/wheels/cu111/torch1.9/index.html

    # Pre-built pytorch3d
    pip3 install pytorch3d -f https://dl.fbaipublicfiles.com/pytorch3d/packaging/wheels/py38_cu111_pyt190/download.html

    # Install Metropolis SDK
    pip3 install git+https://github.com/mapillary/metropolis_sdk.git
